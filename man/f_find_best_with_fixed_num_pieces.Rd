% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/f_find_best_piecewise_survival_models_multi.R
\name{f_find_best_with_fixed_num_pieces}
\alias{f_find_best_with_fixed_num_pieces}
\title{Find the best piecewise survival models with a given number of pieces.}
\usage{
f_find_best_with_fixed_num_pieces(survdata, dists = cbind("exp", "exp"),
  time_col_name, censor_col_name, treatment_col_name,
  covariate_col_names = NULL, which_groups, num_breaks = 1, num_cand = 1,
  fixed_bp = TRUE, min_bp_dist = 30, check_breaks = numeric(0),
  include_breaks = numeric(0), eval_metric = "AIC", best_only = TRUE, ...)
}
\arguments{
\item{survdata}{Survival data to be used.}

\item{dists}{A matrix with the distributions to be considered
in the different time periods using
\code{flexsurvreg} - with one row for each set and one column for
each time period. By default, this function fits a piecewise
exponential distribution with 2 pieces.}

\item{time_col_name}{Name of the column in survdata with event times.}

\item{censor_col_name}{Name of the column in survdata with censorship
indicators.   0:  event observed; 1:  censored.}

\item{treatment_col_name}{Name of the column in survdata that holds the
treatment group names (for example "control", "treatment", "dose1", and
so on).}

\item{covariate_col_names}{Not yet implemented}

\item{which_groups}{Which treatment groups should be fit separately?}

\item{num_breaks}{How many breakpoints should there be in the
piecewise fit? By default, set as 1.}

\item{num_cand}{number of candidate breakpoints checked.}

\item{fixed_bp}{Should breakpoints be considered fixed (the default) or
can they be optimized over?}

\item{min_bp_dist}{The minimum distance between adjacent breakpoints.}

\item{check_breaks}{points that should be included in the set of
potential breaks (but may not end up being included).}

\item{include_breaks}{breaks that must be included in any model.}

\item{eval_metric}{the evaluation metric to use for finding the best model.
Supports AIC, BIC, and -2*log likelihood (m2LL).}

\item{best_only}{should only the best fit for each condition
be returned?}

\item{...}{additional arguments to pass to flexsurvreg.}
}
\value{
If \code{best_only = FALSE}, a list with two components:
\itemize{
\item{\code{fits}, with one element for each fit.  Each element is
in turn a list with components \code{model_def} and \code{fit}.}
\item{\code{quality}, a data frame with one row for each fit,
and the various quality metrics in columns.}
}
If \code{best_only = TRUE}, only the element of fit corresponding
to the lowest fit metric will be returned.
}
\description{
Find the best piecewise survival models with a given number of pieces.
}
\details{
Current implementation supports any specified number of breakpoints.
The evaluation metric can be specified as AIC, BIC, or m2LL.

\code{check_breaks} and \code{include_breaks} are only active
when \code{fixed_bp = TRUE}.   In addition, \code{min_bp_dist}
overrides \code{include_breaks}:  if you include breaks in
\code{include_breaks} that are too close according to \code{min_bp_dist},
they will be removed.

When \code{fixed_bp = TRUE}, breakpoints are static. Different sets of
breakpoints are created (subject to the restrictions in \code{min_bp_dist}),
a model is fit for each set of breakpoints, and quality measures are
calculated and returned.  In this case we are optimizing only  the
parameters of distribution in the various pieces, and only selecting
from a pre-specified list of possible sets of breakpoints.
When \code{fixed_bp = FALSE}, the breakpoints themselves are also
optimized over.   However, because the functions may not have continuous
derivatives at the breakpoints, this often does not converge well.

The requested number \code{num_cand} of candidate breakpoints
are evenly-spaced percentiles of times in the data).  Higher values
of \code{num_cand} gives a finer mesh of potential breakpoints, and
therefore increases the chance of finding a breakpoint very close
to the true breakpoint.   \code{num_cand} does
not include any breaks in \code{check_breaks} or \code{include_breaks},
which will be added to the set of candidate breakpoints.
0 is always added as a required breakpoint; it need not be specified.

To not have a minimum distance between breakpoints,
use \code{min_bp_dist = Inf}.
This may result in checking potential fits with very
closely-spaced breakpoints.
}
\examples{
my_pe <- data.frame(start = c(0, 100, 200), hazard = c(0.003, 0.010, 0.006))
data.3piece <- 
  data.frame(time = r_piecewise_exponential_builder(my_pe)(1000),
             status = 1, group = 1)           
\dontrun{
res <- f_find_best_with_fixed_num_pieces(num_breaks = 2, 
         survdata = data.3piece, time_col_name = "time", 
         censor_col_name = "status", treatment_col_name = "group", 
         fit_indiv_groups = FALSE, num_cand = 10, 
         fixed_bp = TRUE, min_bp_dist = 30, eval_metric="BIC")
}

}
