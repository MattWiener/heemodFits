% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/f_find_best_piecewise_survival_models_multi.R
\name{f_find_best_piecewise_survival_models}
\alias{f_find_best_piecewise_survival_models}
\title{Find best piecewise models for different numbers of pieces.}
\usage{
f_find_best_piecewise_survival_models(num_pieces, dists,
  fit_indiv_groups = TRUE, build_fits = TRUE, ...)
}
\arguments{
\item{num_pieces}{numbers of pieces to check (for example, 2:4)}

\item{dists}{a list of matrices with the distributions to be considered
in the different time periods using \code{flexsurvreg} - with one row for
each set of fits and one column for each time period. The number of elements
in the list must match num_pieces.}

\item{fit_indiv_groups}{Should treatment groups be fit individually?  Default TRUE.}

\item{build_fits}{should a fit with more pieces build on the
breaks from fits with fewer pieces?}

\item{...}{arguments to be passed to \code{f_find_best_with_fixed_num_pieces}}
}
\value{
A list of lists, with each sublist pertaining to a particular group.
Each sublist will have two elements:  \code{metric}, a data frame giving
the evaluation metric (either AIC, BIC, or m2LL - depending on the selection set for
the eval_metric parameter) for the best fit with each number of pieces, and \code{fits},
a list with the best fit for each number of pieces.   Finally, each \code{fit} object
has two elements:  \code{model_def} and \code{fit}.   \code{model_def} is a human-readable
description of the model, and \code{fit} is the corresponding \code{flexsurvreg} object.
}
\description{
Find best piecewise models for different numbers of pieces.
}
\details{
\code{build_fits} has meaning only when num_pieces has
length > 1 (that is, we are checking models with, say, 2 pieces
and also models with 3 pieces).

\code{build_fits = FALSE} means that
we start from scratch for each new number of pieces.

\code{build_fits = TRUE} means that the breakpoints of the best smaller
model are included as required breakpoints of a larger model.  For example,
if the breakpoint of a 2-piece model is at 100, then, when fitting 3-piece
models, only models with one breakpoint of 100 and one other breakpoint will
be considered.  A model with breakpoints at 75 and 150 would not be
considered, because it does not include a breakpoint at 100.   This
substantially reduces the search space for larger models, which saves time,
but could in theory miss an even better model.  In practice, using
\code{build_fits = TRUE} seems to work well.
}
\examples{
my_pe <- data.frame(start = c(0, 100, 200), hazard = c(0.003, 0.010, 0.006))
data.3piece <- 
  data.frame(time = r_piecewise_exponential_builder(my_pe)(1000),
             status = 1, group = 1)
try_dists <- list(
					cbind("exp"),
					rbind(
						cbind("exp","exp"),
						cbind("gamma","exp")
					),
				rbind(
						cbind("exp","exp","exp"),
					cbind("gamma","exp","exp")
					))
           
\dontrun{
res <- f_find_best_piecewise_survival_models(num_pieces = c(1, 2, 3), 
			dists = try_dists, build_fits = TRUE,
         survdata = data.3piece, time_col_name = "time", 
         censor_col_name = "status", treatment_col_name = "group", 
         fit_indiv_groups = FALSE, num_cand = 10, fixed_bp = TRUE, 
         min_bp_dist = 30, include_breaks = 200, eval_metric="BIC")
}

my_pe <- data.frame(start = c(0, 100, 200), hazard = c(0.003, 0.010, 0.006))
my_pe2 <- data.frame(start = c(0, 50, 170), hazard = c(0.006, 0.005, 0.012))
try_dists <- list(
					cbind("exp"),
					rbind(
						cbind("exp","exp"),
						cbind("gamma","exp")
					),
				rbind(
						cbind("exp","exp","exp"),
					cbind("gamma","exp","exp")
					))
data.3piece.1 <- 
		data.frame(time = r_piecewise_exponential_builder(my_pe)(1000),
				status = 1, group = 1)
data.3piece.2 <- 
		data.frame(time = r_piecewise_exponential_builder(my_pe2)(1000),
				status = 1, group = 2)
data.3piece <- rbind.data.frame(data.3piece.1, data.3piece.2)
\dontrun{
all_res <- f_find_best_piecewise_survival_models(num_pieces = c(1, 2, 3), 
		dists = try_dists, fit_indiv_groups = TRUE, build_fits = TRUE,
		survdata = data.3piece, time_col_name = "time", censor_col_name = "status",
		treatment_col_name = "group", num_cand = 10, fixed_bp = TRUE, 
		min_bp_dist = 30, include_breaks = 200, eval_metric="BIC")
}
}
